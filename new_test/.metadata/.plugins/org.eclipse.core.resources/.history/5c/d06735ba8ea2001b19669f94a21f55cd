package study04121;

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

public class HW06 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		////////////////////////////////////////////////////////////////////////
		// #6. �����ÿ���(������ ��� ��) 6�� / 2021. 04. 12. / 2125341020 �ȱԿ�
		// ������ ��� 3
		////////////////////////////////////////////////////////////////////////
		DecimalFormat k20_df = new DecimalFormat("###,###,###,###,###"); // ��ǥ�� ���������� import
		Calendar k20_cal = Calendar.getInstance(); // Calendar import�Ͽ� ����ð� ���
		SimpleDateFormat k20_sdt = new SimpleDateFormat("YYYY/MM/dd HH:mm:ss"); // ����ð� ��� ����
		// ������ ��ǰ�� �̸��� �����ϴ� Array
		String[] k20_name_Array = new String[] { "초코 초초초   ", "바 난나나나나솨나", "건포도 황도도도도", "김 망고와오렌지", "꽃보다남자 드라마",
				"홈런볼은 야구장에서", "*아이스커피한잔", "*꼬북칩누가먹어", "몽쉘은 다들먹어분명", "스윙운 과자", "빈츠는 과자의황제", "동원 반김치삼겹살찌개", "마이 미는지역명",
				"*왕꿈틀이안에킹왕", "*미니쉘미니미니", "짱 셔요그치만더셔요", "초비초 초해피빅초빅", "다이소 다이제다그런거지", "카라장사과 펀치", "비빔 면먹고아이셔",
				"유기농 초코송이랍니다", "계란 말이도나쁘지않지", "계란 말이계란말이", "에엥에 지징지지", "주니어양말 커피다오", "파이리 꼬리야돈의꼬리", "도라에 꼬리몽은도라에몽",
				"리자몽 꼬리도있나", "토게피 알주세요알", "*카카오라고해짜나요", "자 바는최고의학문" };
		// ������ ��ǰ�� �������� ��µ� �� ������ ���߱� ����, ���ڸ� �ڸ��ų� ������
		// �߰����ش�.
		for (int k20_i = 0; k20_i < k20_name_Array.length; k20_i++) { // ���ڰ� ����� array�� ũ�⸸ŭ for�� �ǽ�
			if (k20_name_Array[k20_i].getBytes().length > 12) { // 7�� �̻��̸�
				k20_name_Array[k20_i] = k20_name_Array[k20_i].substring(0, 6); // 6�ڱ����� �߶��ش�.
			}

			int k20_num = 12 - k20_name_Array[k20_i].getBytes().length; // 12���ݺ��� ������ ��ŭ�� ����Ʈ �� ����
			for (int k20_j = 0; k20_j < k20_num; k20_j++) { // �� ���� num��ŭ
				k20_name_Array[k20_i] = k20_name_Array[k20_i] + " "; // ������ �߰����ش�.
			}
		}
		// ������ ��ǰ�� ������ǰ����, �鼼��ǰ���� boolean���� ǥ���Ͽ���.
		boolean[] k20_tax_Array = new boolean[] { // Array ���� �� �� ��ǰ�� �������� ��� �־��־���.
				true, true, true, true, true, true, false, false, true, true, true, true, true, false, false, true,
				true, true, true, true, true, true, true, true, true, true, true, true, true, false, true };
		// ������ ��ǰ�� ���� �ݾ��� �����ϴ� Array
		int[] k20_price_Array = new int[] { // Array ���� �� �� ��ǰ�� �ݾ��� ��� �־��־���.
				3000, 1000, 1000, 20000, 10000, 2500, 3000, 2200, 1800, 3800, 5200, 1800, 4000, 4400, 3800, 13200, 3800,
				2700, 200, 300, 3400, 1800, 8800, 10000, 500, 4800, 800, 900, 1300, 200, 300 };
		// ������ ��ǰ�� ���� ������ �����ϴ� Array
		int[] k20_how_Many_Array = new int[] { // Array ���� �� �� ��ǰ�� ������ ��� �־��־���.
				1, 1, 1, 2, 5, 6, 7, 8, 1, 5, 13, 14, 5, 6, 3, 1, 3, 5, 10, 6, 8, 8, 6, 5, 8, 10, 12, 14, 60, 80, 5 };
		int[] k20_total_Price_Array = new int[k20_name_Array.length];
		// ������ ��ǰ�� ���� * ������ ��ǰ�� �ݾ��� �ٸ� Array�� ���� �ο�
		for (int i = 0; i < k20_total_Price_Array.length; i++) { // for���� ������ŭ �ǽõ�.
			k20_total_Price_Array[i] = k20_price_Array[i] * k20_how_Many_Array[i]; // �� for������ Array���� ����.
		}

		int price_Of_Taxfree = 0; // �鼼��ǰ�� ���� ����
		int price_Of_Tax = 0; // ������ǰ�� ���� ����
		for (int i = 0; i < k20_name_Array.length; i++) { // for���� ��ǰ ��������ŭ �ǽõǸ�
			if (k20_tax_Array[i] == false) { // ���� �鼼��ǰ�� ��,
				price_Of_Taxfree += k20_price_Array[i] * k20_how_Many_Array[i]; // �鼼��ǰ�� �����Ѿ��� ������.
			} else { // ���� ������ǰ�� ��,
				price_Of_Tax += k20_price_Array[i] * k20_how_Many_Array[i]; // ������ǰ�� �����Ѿ��� ������.
			}
		}

		double tax = 0.1; // ������ 10%
		int real_Price_Of_Tax = (int) (price_Of_Tax / (tax + 1)); // ������ǰ�� ������ �����ϴ� ��������
		int how_Much_Tax = (int) (price_Of_Tax * tax / (tax + 1)) + 1; // ������ǰ��
		// �ΰ����� �����ϴ� ��������
		int price_Of_Total = price_Of_Taxfree + price_Of_Tax; // ������ǰ�� �Ѿ�, �鼼��ǰ�� �Ѿ�
		// ��� ������. �� ������ �Ѿ�
		System.out.printf("\n\n                 이마트 죽전점 (031)888-1234\n"); // 텍스트 출력
	      // 맨 앞에 두 줄 띄어 줌으로써 읽기 쉽도록.
	      System.out.printf("                 206-86-50913 강희석\n"); // 텍스트 출력
	      System.out.printf("                 용인 수지구 포은대로 552\n"); // 텍스트 출력
	      System.out.printf("영수증 미지참시 교환/환불 불가\n"); // 텍스트 출력
	      System.out.printf("정상상품에 한함, 30일 이내(신선 7일)\n"); // 텍스트 출력
	      System.out.printf("*일부 브랜드매장 제외(매장 고지물참조)\n"); // 텍스트 출력
	      System.out.printf("교환/환불 구매점에서 가능(결제카드 지참)\n\n"); // 텍스트 출력
	      System.out.printf("[구매]%s      POS:0011-9861\n", k20_sdt.format(k20_cal.getTime()));
	      // 현재시간 출력. 포맷형태는 k20_sdt 활용
	      System.out.printf("--------------------------------------------\n"); // 줄 출력. 이제 시작됨.
	      System.out.printf("   상품명            단 가    수량      금액\n"); // 상품명/단가/수량/금액
	      for (int i = 0; i < k20_name_Array.length; i++) { // 상품 가짓수만큼 for문이 실시됨.
	         System.out.printf("  %-14.8s%6s%8s%9s\n", // 각 상품별 출력문마다의 간격을 맞춰주기 위함이다.
	      // 또한 상품명이 길 경우 8칸으로 잘라버리기 위해 .8이 들어갔음.
	      // -14는 14칸 간격 설정 후 앞에서부터 왼쪽 정렬한다는 의미. 마이너스 없으면 오른쪽 정렬.
	               k20_name_Array[i], k20_df.format(k20_price_Array[i]), // 상품명, 가격 출력. 쉼표찍어줌.
	               k20_how_Many_Array[i], k20_df.format(k20_total_Price_Array[i])); // 수량, 총액 출력.
	         if (((i+1)%5) == 0) { // 상품이 5개씩 찍힐 때마다 점선을 출력하여 구분해줌.
	            System.out.printf("--------------------------------------------\n"); // 점선 출력
	         }
	      }
	      System.out.printf("\n"); // 줄 넘기고 다시 진행
	      System.out.printf("%25s%14d\n",  "총 품목 수량", k20_name_Array.length); // 총 품목 수량은 상품가짓수
	      System.out.printf("%26s%14s\n", "(*)면 세 물 품", k20_df.format(price_Of_Taxfree));
	      // 면세물품 : 면세상품의 총액 합계
	      System.out.printf("%26s%14s\n", "과 세 물 품", k20_df.format(real_Price_Of_Tax));
	      // 과세물품 : 과세상품의 원가 총액 합계
	      System.out.printf("%27s%14s\n", "부   가   세", k20_df.format(how_Much_Tax));
	      // 부가세 : 과세상품의 세금 합계
	      System.out.printf("%28s%14s\n", "합       계", k20_df.format(price_Of_Total));
	      // 합계 : 지불한 총액
	      System.out.printf("%s%27s\n", "결 제 대 상 금 액", k20_df.format(price_Of_Total));
	      // 결제대상금액 : 합계와 동일
	      System.out.printf("--------------------------------------------\n"); // 줄 출력
	      System.out.printf("0012 KEB 하나  %29s\n", "541707**0484/35860658"); // 텍스트 출력
	      System.out.printf("카드결제(IC)%22s%s\n", "일시불 / ", k20_df.format(price_Of_Total)); // 텍스트 출력
	      System.out.printf("--------------------------------------------\n"); // 줄 출력
	      System.out.printf("              [신세계포인트 적립]\n"); // 텍스트 출력
	      System.out.printf("홍*두 고객님의 포인트 현황입니다.\n"); // 텍스트 출력
	      System.out.printf("금회발생포인트           9350**9995      164\n"); // 텍스트 출력
	      System.out.printf("누계(가용)포인트                5,637(5,473)\n"); // 텍스트 출력
	      System.out.printf("*신세계포인트 유효기간은 2년입니다.\n"); // 텍스트 출력
	      System.out.printf("--------------------------------------------\n"); // 줄 출력
	      System.out.printf("        구매금액기준 무료주차시간 자동부여\n"); // 텍스트 출력
	      System.out.printf("차량번호 : %32s\n", "34저****"); // 텍스트 출력
	      System.out.printf("입차시간 : %32s\n", k20_sdt.format(k20_cal.getTime())); // 현재시간 출력
	      System.out.printf("--------------------------------------------\n"); // 줄 출력
	      System.out.printf("캐셔:084599 양00 %29s", "1150\n"); // 텍스트 출력
	      System.out.printf("    lliliililililillilililiililiilililili\n"); // 바코드 출력
	      System.out.printf("        20210303/00119861/00164980/31\n"); // 영수증 마무리
		
		
		
		/*
		//////////////////////////////////////
		System.out.printf("\n\n                 �̸�Ʈ ������ (031)888-1234\n"); // �ؽ�Ʈ ���
		// �� �տ� �� �� ��� �����ν� �б� ������.
		System.out.printf("                 206-86-50913 ����\n"); // �ؽ�Ʈ ���
		System.out.printf("                 ���� ������ ������� 552\n"); // �ؽ�Ʈ ���
		System.out.printf("������ �������� ��ȯ/ȯ�� �Ұ�\n"); // �ؽ�Ʈ ���
		System.out.printf("�����ǰ�� ����, 30�� �̳�(�ż� 7��)\n"); // �ؽ�Ʈ ���
		System.out.printf("*�Ϻ� �귣����� ����(���� ����������)\n"); // �ؽ�Ʈ ���
		System.out.printf("��ȯ/ȯ�� ���������� ����(����ī�� ����)\n\n"); // �ؽ�Ʈ ���
		System.out.printf("[����]%s        POS:0011-9861\n", k20_sdt.format(k20_cal.getTime()));
		// ����ð� ���. �������´� k20_sdt Ȱ��
		System.out.printf("----------------------------------------------\n"); // �� ���. ���� ���۵�.
		System.out.printf("  ��ǰ��                �� ��    ����     �ݾ�\n"); // ��ǰ��/�ܰ�/����/�ݾ�
		for (int i = 0; i < k20_name_Array.length; i++) { // ��ǰ ��������ŭ for���� �ǽõ�.
			System.out.printf("  %s         %6s%8s%9s\n", // �� ��ǰ�� ��¹������� ������ �����ֱ� �����̴�.
					// ���� ��ǰ���� �� ��� 8ĭ���� �߶������ ���� .8�� ����.
					// -14�� 14ĭ ���� ���� �� �տ������� ���� �����Ѵٴ� �ǹ�. ���̳ʽ� ������ ������
					// ����.
					k20_name_Array[i], k20_df.format(k20_price_Array[i]), // ��ǰ��, ���� ���. ��ǥ�����.
					k20_how_Many_Array[i], k20_df.format(k20_total_Price_Array[i])); // ����, �Ѿ� ���.
			if (((i + 1) % 5) == 0) { // ��ǰ�� 5���� ���� ������ ������ ����Ͽ� ��������.
				System.out.printf("----------------------------------------------\n"); // ���� ���
			}
		}
		System.out.printf("\n"); // �� �ѱ�� �ٽ� ����
		System.out.printf("%25s%16d\n", "�� ǰ�� ����", k20_name_Array.length); // �� ǰ�� ������ ��ǰ������
		System.out.printf("%26s%16s\n", "(*)�� �� �� ǰ", k20_df.format(price_Of_Taxfree));
		// �鼼��ǰ : �鼼��ǰ�� �Ѿ� �հ�
		System.out.printf("%26s%16s\n", "�� �� �� ǰ", k20_df.format(real_Price_Of_Tax));
		// ������ǰ : ������ǰ�� ���� �Ѿ� �հ�
		System.out.printf("%27s%16s\n", "��   ��   ��", k20_df.format(how_Much_Tax));
		// �ΰ��� : ������ǰ�� ���� �հ�
		System.out.printf("%28s%16s\n", "��       ��", k20_df.format(price_Of_Total));
		// �հ� : ������ �Ѿ�
		System.out.printf("%s%29s\n", "�� �� �� �� �� ��", k20_df.format(price_Of_Total));
		// �������ݾ� : �հ�� ����
		System.out.printf("----------------------------------------------\n"); // �� ���
		System.out.printf("0012 KEB �ϳ�   %30s\n", "541707**0484/35860658"); // �ؽ�Ʈ ���
		System.out.printf("ī�����(IC) %23s%s\n", "�Ͻú� / ", k20_df.format(price_Of_Total)); // �ؽ�Ʈ ���
		System.out.printf("----------------------------------------------\n"); // �� ���
		System.out.printf("              [�ż�������Ʈ ����]\n"); // �ؽ�Ʈ ���
		System.out.printf("ȫ*�� ������ ����Ʈ ��Ȳ�Դϴ�.\n"); // �ؽ�Ʈ ���
		System.out.printf("��ȸ�߻�����Ʈ           9350**9995        164\n"); // �ؽ�Ʈ ���
		System.out.printf("����(����)����Ʈ              5,637(    5,473)\n"); // �ؽ�Ʈ ���
		System.out.printf("*�ż�������Ʈ ��ȿ�Ⱓ�� 2���Դϴ�.\n"); // �ؽ�Ʈ ���
		System.out.printf("----------------------------------------------\n"); // �� ���
		System.out.printf("        ���űݾױ��� ���������ð� �ڵ��ο�\n"); // �ؽ�Ʈ ���
		System.out.printf("������ȣ : %34s\n", "34��****"); // �ؽ�Ʈ ���
		System.out.printf("�����ð� : %35s\n", k20_sdt.format(k20_cal.getTime())); // ����ð� ���
		System.out.printf("----------------------------------------------\n"); // �� ���
		System.out.printf("ĳ��:084599 ��00 %30s", "1150\n"); // �ؽ�Ʈ ���
		System.out.printf("    lliliililililillilililiililiilililili\n"); // ���ڵ� ���
		System.out.printf("        20210303/00119861/00164980/31\n"); // ������ ������
		*/
	}
}
